# Фигуры
# Пешка 1 Y+1 (взятие xy+1) (особое Y+2)
# Конь 2 (X+2Y+1)(X+2Y-1)(X-2Y+1)(X-2Y-1)(Y+2X+1)(Y+2X-1)(Y-2X+1)(Y-2X-1)
# Слон 3 xy+n xy-n x+y-n x-y+n
# Ладья 4 x+n y+n x-n y-n
# Ферзь 5 (xy+n xy-n x+y-n x-y+n) (x+n y+n x-n y-n)
# Король 6 x+-1 y+-1 xy+-1


start_chessboard = {'A': {'1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0},
                    'B': {'1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0},
                    'C': {'1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0},
                    'D': {'1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0},
                    'E': {'1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0},
                    'F': {'1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0},
                    'G': {'1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0},
                    'H': {'1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0}
                    }

pieces_start = {('p', 'w', 2, 1), ('p', 'w', 2, 2), ('p', 'w', 2, 3), ('p', 'w', 2, 4),
                ('p', 'w', 2, 5), ('p', 'w', 2, 6), ('p', 'w', 2, 7), ('p', 'w', 2, 8),
                ('r', 'w', 1, 1), ('r', 'w', 1, 8), ('k', 'w', 1, 2), ('k', 'w', 1, 7),
                ('b', 'w', 1, 3), ('b', 'w', 1, 6), ('q', 'w', 1, 4), ('g', 'w', 1, 5),

                ('p', 'b', 7, 1), ('p', 'b', 7, 2), ('p', 'b', 7, 3), ('p', 'b', 7, 4),
                ('p', 'b', 7, 5), ('p', 'b', 7, 6), ('p', 'b', 7, 7), ('p', 'b', 7, 8),
                ('r', 'b', 8, 1), ('r', 'b', 8, 8), ('k', 'b', 8, 2), ('k', 'b', 8, 7),
                ('b', 'b', 8, 3), ('b', 'b', 8, 6), ('q', 'b', 8, 4), ('g', 'b', 8, 5) }


class Chess:
    def __init__(self):
        self.pieces = pieces_start
        self.current_player = 0
        self.black_king_state = 0  # 0 - ничего, 1 - шах
        self.white_king_state = 0

    def get_current_player(self):
        return self.current_player

    def get_piece_by_position(self, x, y):
        for piece in self.pieces:
            if x == piece[2] and y == piece[3]:
                return piece
        return 0

    def get_available_moves(self, piece):
        pass

    def move(self, piece, x, y):
        pass
